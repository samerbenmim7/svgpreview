/**
 * @param {Object} myToolPath    - Tool path object containing myCoordinatesXY and myCoordinatesZBeforeAndAfter arrays
 * @param {string} resGCode      - [Optional] In C++ this was passed by reference, but in JS we typically return it
 * @param {number} scale         - Scaling factor
 * @param {Object} mySettings    - Settings object with servo angles, speeds, thresholds, etc.
 * @param {boolean} giveWarning  - Flag whether to return -1 if out-of-bounds
 *
 * @returns {Object} An object containing:
 *   - resGCode     (string) : The generated G-code
 *   - totalTimeInt (number) : The integer version of the total time
 *   - actualPenPath (object): A new path object like the original but containing only the coordinates used
 */
function createGCode(myToolPath, scale, mySettings, giveWarning) {
    // If no coordinates, return 1 (as the original C++ code does)
    if (!myToolPath.myCoordinatesXY || myToolPath.myCoordinatesXY.length === 0) {
      return {
        resGCode: "",
        totalTimeInt: 1,
        actualPenPath: null
      };
    }
  
    // This will mirror the C++ "actualPenPath"
    const actualPenPath = {
      myCoordinatesXY: [],
      myCoordinatesZBeforeAndAfter: []
    };
  
    // We’ll build the G-code by pushing into an array then joining
    let sb = [];
  
    // Strings that move the servo up/down
    let strUp = "M400\r\n" +
                "M280 P0 S" + mySettings.servoAngleUp + "; #ServoUp\r\n" +
                "G4 P" + mySettings.servoWaitTime + "\r\n";
  
    let strDown = "M400\r\n" +
                  "M280 P0 S" + mySettings.servoAngleDown + "; #ServoDown\r\n" +
                  "G4 P" + mySettings.servoWaitTime + "\r\n";
  
    // Initialize time, distance, lifts, etc.
    let totalTime = 0.0;
    let totalDist = 0.0;
    let totalLifts = 0;
    let fastMoving = 10000; // same as in the C++ code
  
    // Start G-code with units in mm
    sb.push("G21\r\n");
  
    // Set initial speed
    sb.push("G1 F" + mySettings.printerSpeed + "\r\n");
  
    // Start with servo up
    sb.push(strUp);
  
    // Temporary variables for calculations
    let lastX = 0.0, lastY = 0.0;
    let curX = 0.0, curY = 0.0;
    let nextX = 0.0, nextY = 0.0;
    let distToCur = 0.0;
    let sumAngleDiffsToNext = 0.0;
    let counter = 0;
    let servoUp = true;
  
    // Vector placeholders
    let vecLast = { X: 1.0, Y: 0.0 };
    let vecNext = { X: 0.0, Y: 0.0 };
  
    // Thresholds from settings
    let distThreshold = mySettings.segmentLength;
    let angleThreshold = mySettings.angleThreshold;
  
    // Add the first coordinate to actualPenPath
    actualPenPath.myCoordinatesXY.push({
      X: myToolPath.myCoordinatesXY[0].X,
      Y: myToolPath.myCoordinatesXY[0].Y
    });
    actualPenPath.myCoordinatesZBeforeAndAfter.push({
      X: myToolPath.myCoordinatesZBeforeAndAfter[0].X,
      Y: myToolPath.myCoordinatesZBeforeAndAfter[0].Y
    });
  
    // Main loop
    for (let n = 0; n < myToolPath.myCoordinatesXY.length; n++) {
      if (n < myToolPath.myCoordinatesXY.length - 1) {
        nextX = myToolPath.myCoordinatesXY[n + 1].X * scale;
        nextY = myToolPath.myCoordinatesXY[n + 1].Y * scale;
      } else {
        nextX = 0.0;
        nextY = 0.0;
      }
  
      curX = myToolPath.myCoordinatesXY[n].X * scale;
      curY = myToolPath.myCoordinatesXY[n].Y * scale;
  
      if (n === 0) {
        lastX = 0.0;
        lastY = 0.0;
      } else {
        lastX = myToolPath.myCoordinatesXY[n - 1].X * scale;
        lastY = myToolPath.myCoordinatesXY[n - 1].Y * scale;
      }
  
      // Compute direction vectors
      let dx = curX - lastX;
      let dy = curY - lastY;
      let normLast = Math.sqrt(dx * dx + dy * dy);
      if (normLast === 0) {
        normLast = 1e-6; // Avoid division by zero
      }
      vecLast.X = dx / normLast;
      vecLast.Y = dy / normLast;
  
      dx = nextX - curX;
      dy = nextY - curY;
      let normNext = Math.sqrt(dx * dx + dy * dy);
      if (normNext === 0) {
        normNext = 1e-6; // Avoid division by zero
      }
      vecNext.X = dx / normNext;
      vecNext.Y = dy / normNext;
  
      // Calculate angle difference
      let dot = (vecNext.X * vecLast.X + vecNext.Y * vecLast.Y);
      let dAngle = Math.abs(Math.acos(dot));
      if (isNaN(dAngle)) {
        dAngle = 0.0;
      }
  
      distToCur += normLast;
      sumAngleDiffsToNext += dAngle;
      counter++;
  
      // If threshold exceeded and pen is down, or about to exceed
      if (
        ((distToCur + normNext >= distThreshold) || (sumAngleDiffsToNext >= angleThreshold)) &&
        !servoUp &&
        (distToCur + normNext > 0.1)
      ) {
        // Compute a factor for printing speed
        let factor = distToCur / distThreshold;
        let curPrintSpeed = mySettings.printerSpeed * Math.min(1.0, factor);
        curPrintSpeed = Math.max(curPrintSpeed, 0.5 * mySettings.printerSpeed);
  
        // If it’s the first point, move fast
        if (n === 0) {
          curPrintSpeed = fastMoving;
        }
  
        // Move to the coordinate
        sb.push("G1 X");
        sb.push(curX.toFixed(2));
        sb.push(" Y");
        sb.push(curY.toFixed(2));
        sb.push("\r\n");
  
        // Add to actualPenPath
        actualPenPath.myCoordinatesXY.push({
          X: myToolPath.myCoordinatesXY[n].X,
          Y: myToolPath.myCoordinatesXY[n].Y
        });
        actualPenPath.myCoordinatesZBeforeAndAfter.push({
          X: myToolPath.myCoordinatesZBeforeAndAfter[n].X,
          Y: myToolPath.myCoordinatesZBeforeAndAfter[n].Y
        });
  
        totalTime += (distToCur / (curPrintSpeed / 60.0));
        totalDist += distToCur;
        distToCur = 0.0;
        sumAngleDiffsToNext = 0.0;
        counter = 0;
  
        // Check boundaries if needed
        if (
          (curX < mySettings.heightLeftStripe ||
           curX > (mySettings.paperSize.X - mySettings.heightRightStripe) ||
           curY < mySettings.heightTopStripe) && giveWarning
        ) {
          // Return -1.0 if out-of-bounds
          return {
            resGCode: "",
            totalTimeInt: -1,
            actualPenPath: null
          };
        }
      }
  
      // Check for a Z change
      let zBefore = myToolPath.myCoordinatesZBeforeAndAfter[n].X;
      let zAfter = myToolPath.myCoordinatesZBeforeAndAfter[n].Y;
  
      if (zBefore !== zAfter) {
        // If pen going down
        if (zAfter === 0) {
          sb.push("G1 X");
          sb.push(curX.toFixed(2));
          sb.push(" Y");
          // subtracting heightTopStripe if you want to replicate the offset 
          // from your code (your code does `- heightTopStripe` in some places)
          sb.push((curY - mySettings.heightTopStripe).toFixed(2));
          sb.push("\r\n");
  
          // Pen down
          sb.push(strDown);
  
          // Return to printing speed
          sb.push("G01 F");
          sb.push(mySettings.printerSpeed.toFixed(0));
          sb.push("\r\n");
  
          totalTime += mySettings.servoWaitTime / 1000.0;
          totalDist += distToCur;
          totalLifts++;
  
          distToCur = 0.0;
          sumAngleDiffsToNext = 0.0;
          servoUp = false;
  
          actualPenPath.myCoordinatesXY.push({
            X: myToolPath.myCoordinatesXY[n].X,
            Y: myToolPath.myCoordinatesXY[n].Y
          });
          actualPenPath.myCoordinatesZBeforeAndAfter.push({
            X: zBefore,
            Y: zAfter
          });
        } else {
          // If pen goes up, maybe set speed to fast if the jump is big
          if (distToCur + normNext > 5.0) {
            sb.push("G1 F");
            sb.push(fastMoving.toFixed(0));
            sb.push("\r\n");
          }
  
          // Pen up
          sb.push(strUp);
  
          totalTime += mySettings.servoWaitTime / 1000.0;
          totalDist += distToCur;
          distToCur = 0.0;
          sumAngleDiffsToNext = 0.0;
          servoUp = true;
  
          actualPenPath.myCoordinatesXY.push({
            X: myToolPath.myCoordinatesXY[n].X,
            Y: myToolPath.myCoordinatesXY[n].Y
          });
          actualPenPath.myCoordinatesZBeforeAndAfter.push({
            X: zBefore,
            Y: zAfter
          });
        }
      }
    }
  
    // End: always lift pen
    sb.push(strUp);
  
    // (Optional) Move the pen back to a start location here, etc.
    // sb.push("G1 F" + (1.5 * mySettings.printerSpeed) + "\r\n");
    // sb.push("G1 X10.0 Y10.0\r\n");
  
    let resGCode = sb.join("");
  
    // In your code, you replaced commas with dots. 
    // In normal JavaScript, toFixed() already uses '.', so you might not need this.
    // But if you still want to replicate exactly:
    resGCode = resGCode.replace(/,/g, ".");
  
    // Convert totalTime to an integer (mimics Convert::ToInt32)
    let totalTimeInt = Math.round(totalTime);
  
    return {
      resGCode,
      totalTimeInt,
      actualPenPath
    };
  }
  

  // Suppose we have:
let myToolPath = {
    myCoordinatesXY: [
{"X":389.40488, "Y":297.53024},
{"X":389.0881, "Y":299.51578},
{"X":388.97424, "Y":300.19904},
{"X":388.8749, "Y":300.90222},
{"X":388.7302, "Y":301.88324},
{"X":388.63986, "Y":302.5522},
{"X":388.55408, "Y":303.15613},
{"X":388.466, "Y":303.79254},
{"X":388.38788, "Y":304.44055},
{"X":388.30133, "Y":305.05536},
{"X":388.23483, "Y":305.54077},
{"X":388.18588, "Y":305.92944},
{"X":388.13693, "Y":306.31815},
{"X":388.08795, "Y":306.70682},
{"X":388.03824, "Y":307.10632},
{"X":387.98853, "Y":307.50583},
{"X":387.94952, "Y":307.90607},
{"X":387.91153, "Y":308.2955},
{"X":387.86255, "Y":308.68417},
{"X":387.8136, "Y":309.07285},
{"X":387.77536, "Y":309.46228},
{"X":387.73813, "Y":309.84085},
{"X":387.70062, "Y":310.21945},
{"X":387.6634, "Y":310.59805},
{"X":387.63306, "Y":311.0316},
{"X":387.61423, "Y":311.45505},
{"X":387.59183, "Y":311.9327},
{"X":387.58093, "Y":312.40027},
{"X":387.57, "Y":312.86786},
{"X":387.5706, "Y":313.3253},
{"X":387.57214, "Y":313.77197},
{"X":387.578, "Y":314.15356},
{"X":387.5841, "Y":314.53522},
{"X":387.60547, "Y":314.85257},
{"X":387.6159, "Y":315.16913},
{"X":387.64368, "Y":315.55228},
{"X":387.68835, "Y":316.00195},
{"X":387.75342, "Y":316.47485},
{"X":387.82693, "Y":316.981},
{"X":387.92288, "Y":317.4778},
{"X":388.0196, "Y":317.9638},
{"X":388.12778, "Y":318.4397},
{"X":388.23206, "Y":318.81732},
{"X":388.32022, "Y":319.11752},
{"X":388.41092, "Y":319.3744},
{"X":388.49493, "Y":319.5763},
{"X":388.56876, "Y":319.7666},
{"X":388.6433, "Y":319.9461},
{"X":388.71942, "Y":320.10388},
{"X":388.80646, "Y":320.26245},
{"X":388.89404, "Y":320.4102},
{"X":388.9709, "Y":320.55713},
{"X":389.06866, "Y":320.71646},
{"X":389.16718, "Y":320.86496},
{"X":389.2774, "Y":321.00336},
{"X":389.38666, "Y":321.15256},
{"X":389.48593, "Y":321.2902},
{"X":389.60767, "Y":321.41855},
{"X":389.75104, "Y":321.54837},
{"X":389.88525, "Y":321.65576},
{"X":390.03015, "Y":321.76392},
{"X":390.17505, "Y":321.8721},
{"X":390.3317, "Y":321.97018},
{"X":390.4998, "Y":322.05817},
{"X":390.65768, "Y":322.13455},
{"X":390.80637, "Y":322.1885},
{"X":390.95508, "Y":322.24246},
{"X":391.12695, "Y":322.27628},
{"X":391.35468, "Y":322.2922},
{"X":391.6395, "Y":322.26855},
{"X":391.92508, "Y":322.23407},
{"X":392.22235, "Y":322.1895},
{"X":392.5209, "Y":322.12326},
{"X":392.8205, "Y":322.0462},
{"X":393.09964, "Y":321.9459},
{"X":393.3255, "Y":321.831},
{"X":393.51895, "Y":321.71384},
{"X":393.7022, "Y":321.58502},
{"X":393.87628, "Y":321.43384},
{"X":394.05008, "Y":321.28262},
{"X":394.23666, "Y":321.10617},
{"X":394.4015, "Y":320.92963},
{"X":394.56558, "Y":320.7632},
{"X":384.53656, "Y":310.45563},
{"X":385.19943, "Y":310.42575},
{"X":385.59097, "Y":310.42264},
{"X":385.9112, "Y":310.42108},
{"X":386.3146, "Y":310.4166},
{"X":386.65198, "Y":310.41843},
{"X":386.95694, "Y":310.41797},
{"X":387.26215, "Y":310.4175},
{"X":387.56714, "Y":310.41705},
{"X":387.9045, "Y":310.41888},
{"X":388.2421, "Y":310.42065},
{"X":388.53613, "Y":310.41943},
{"X":388.81943, "Y":310.41748},
{"X":389.1022, "Y":310.42636},
{"X":389.37378, "Y":310.43445},
{"X":389.7114, "Y":310.43628},
{"X":390.0054, "Y":310.43506},
{"X":390.28796, "Y":310.44394},
{"X":390.5705, "Y":310.4528},
{"X":390.84232, "Y":310.4609},
{"X":391.1139, "Y":310.46902},
{"X":391.375, "Y":310.47638},
{"X":391.5591, "Y":310.48926},
{"X":391.76517, "Y":310.50366},
{"X":391.98193, "Y":310.51883},
{"X":392.177, "Y":310.53247},
{"X":392.37207, "Y":310.5461},
{"X":392.56717, "Y":310.55975},
{"X":392.76224, "Y":310.5734},
{"X":392.9595, "Y":310.5872},
{"X":393.11636, "Y":310.59814},
{"X":393.29343, "Y":310.61053},
{"X":396.97122, "Y":316.8907},
{"X":397.38107, "Y":316.8431},
{"X":397.9277, "Y":316.72885},
{"X":398.77655, "Y":316.46146},
{"X":399.42258, "Y":316.25613},
{"X":400.03598, "Y":316.04852},
{"X":400.63965, "Y":315.82935},
{"X":401.2112, "Y":315.59702},
{"X":401.63895, "Y":315.39822},
{"X":401.888, "Y":315.26312},
{"X":402.1263, "Y":315.12732},
{"X":402.33127, "Y":315.0001},
{"X":402.5262, "Y":314.86124},
{"X":402.7202, "Y":314.7332},
{"X":402.90347, "Y":314.60443},
{"X":403.08673, "Y":314.47568},
{"X":403.26, "Y":314.3353},
{"X":403.43307, "Y":314.19492},
{"X":403.5954, "Y":314.0538},
{"X":403.75775, "Y":313.91263},
{"X":403.91013, "Y":313.75995},
{"X":404.07397, "Y":313.59714},
{"X":404.21616, "Y":313.4328},
{"X":404.36932, "Y":313.26926},
{"X":404.51224, "Y":313.09412},
{"X":404.65442, "Y":312.92978},
{"X":404.78488, "Y":312.77554},
{"X":404.9054, "Y":312.6097},
{"X":405.03836, "Y":312.42294},
{"X":405.18433, "Y":312.20444},
{"X":405.3201, "Y":311.9743},
{"X":405.4444, "Y":311.7543},
{"X":405.55798, "Y":311.5335},
{"X":405.67206, "Y":311.30188},
{"X":405.7747, "Y":311.08032},
{"X":405.84265, "Y":310.88904},
{"X":405.89737, "Y":310.7295},
{"X":405.94037, "Y":310.58},
{"X":405.9836, "Y":310.43054},
{"X":406.01514, "Y":310.29117},
{"X":406.0357, "Y":310.151},
{"X":406.05728, "Y":310.00003},
{"X":406.0717, "Y":309.79413},
{"X":406.07437, "Y":309.59824},
{"X":406.0663, "Y":309.40164},
{"X":406.05753, "Y":309.21588},
{"X":406.0388, "Y":309.01852},
{"X":406.00833, "Y":308.83124},
{"X":405.97635, "Y":308.66562},
{"X":405.93982, "Y":308.56503},
{"X":405.8923, "Y":308.4637},
{"X":405.8443, "Y":308.37323},
{"X":405.79605, "Y":308.2827},
{"X":405.73636, "Y":308.20227},
{"X":405.6659, "Y":308.12112},
{"X":405.5845, "Y":308.03918},
{"X":405.4914, "Y":307.96735},
{"X":405.38757, "Y":307.89474},
{"X":405.273, "Y":307.82138},
{"X":405.1358, "Y":307.75732},
{"X":404.9978, "Y":307.7041},
{"X":404.86008, "Y":307.65088},
{"X":404.6989, "Y":307.61783},
{"X":404.527, "Y":307.58405},
{"X":404.31027, "Y":307.56888},
{"X":404.0703, "Y":307.57388},
{"X":403.81888, "Y":307.58896},
{"X":403.4102, "Y":307.66934},
{"X":402.93292, "Y":307.79932},
{"X":402.45465, "Y":307.94012},
{"X":401.96338, "Y":308.11273},
{"X":401.50375, "Y":308.2984},
{"X":401.00793, "Y":308.53604},
{"X":400.51062, "Y":308.79532},
{"X":400.1571, "Y":309.02112},
{"X":399.85864, "Y":309.23984},
{"X":399.55942, "Y":309.46942},
{"X":399.27118, "Y":309.69977},
{"X":398.98114, "Y":309.95178},
{"X":398.737, "Y":310.17432},
{"X":398.5028, "Y":310.40845},
{"X":398.25693, "Y":310.65268},
{"X":398.0095, "Y":310.91852},
{"X":397.77304, "Y":311.18518},
{"X":397.53583, "Y":311.46265},
{"X":397.30954, "Y":311.7409},
{"X":397.0823, "Y":312.02997},
{"X":396.8553, "Y":312.31906},
{"X":396.64893, "Y":312.62048},
{"X":396.45508, "Y":312.90097},
{"X":396.26044, "Y":313.19235},
{"X":396.0982, "Y":313.48596},
{"X":395.93622, "Y":313.7796},
{"X":395.78494, "Y":314.07397},
{"X":395.64438, "Y":314.36914},
{"X":395.5163, "Y":314.64334},
{"X":395.39615, "Y":314.96167},
{"X":395.26663, "Y":315.41006},
{"X":395.14737, "Y":315.87006},
{"X":395.0505, "Y":316.32074},
{"X":394.9753, "Y":316.7729},
{"X":394.92258, "Y":317.21576},
{"X":394.88077, "Y":317.6594},
{"X":394.8627, "Y":318.072},
{"X":394.88632, "Y":318.35684},
{"X":394.9309, "Y":318.65402},
{"X":394.99713, "Y":318.95273},
{"X":395.0751, "Y":319.24133},
{"X":395.1528, "Y":319.52997},
{"X":395.2532, "Y":319.8093},
{"X":395.36505, "Y":320.0785},
{"X":395.4777, "Y":320.33688},
{"X":395.58237, "Y":320.55112},
{"X":395.68808, "Y":320.75455},
{"X":395.80447, "Y":320.95877},
{"X":395.93262, "Y":321.15286},
{"X":396.07123, "Y":321.34772},
{"X":396.21106, "Y":321.53177},
{"X":396.40396, "Y":321.73038},
{"X":396.60785, "Y":321.9298},
{"X":396.8334, "Y":322.13074},
{"X":397.0714, "Y":322.31073},
{"X":397.33087, "Y":322.49228},
{"X":397.60205, "Y":322.6637},
{"X":397.88492, "Y":322.82507},
{"X":398.1484, "Y":322.95242},
{"X":398.41318, "Y":323.05807},
{"X":398.7121, "Y":323.14432},
{"X":399.0227, "Y":323.2205},
{"X":399.43304, "Y":323.27097},
{"X":399.96472, "Y":323.29727},
{"X":400.58716, "Y":323.27545},
{"X":401.23352, "Y":323.22263},
{"X":401.91455, "Y":323.13953},
{"X":402.57544, "Y":323.03326},
{"X":403.26025, "Y":322.896},
{"X":403.8599, "Y":322.731},
{"X":404.36365, "Y":322.5375},
{"X":404.85794, "Y":322.32153},
{"X":405.34305, "Y":322.0832},
{"X":405.81793, "Y":321.83322},
{"X":406.28363, "Y":321.56085},
{"X":406.7391, "Y":321.27682},
{"X":407.19537, "Y":320.98196},
{"X":407.6387, "Y":320.68625},
{"X":408.00867, "Y":320.40717},
{"X":408.40933, "Y":320.1302},
{"X":408.6587, "Y":316.56436},
{"X":408.7329, "Y":316.59497},
{"X":408.91025, "Y":316.67343},
{"X":409.16754, "Y":316.7633},
{"X":409.51056, "Y":316.84177},
{"X":410.29086, "Y":316.89633},
{"X":411.10535, "Y":316.93146},
{"X":411.93207, "Y":316.9457},
{"X":412.7503, "Y":316.9267},
{"X":413.5701, "Y":316.88602},
{"X":414.51428, "Y":316.77777},
{"X":415.3633, "Y":316.6302},
{"X":415.83136, "Y":316.47778},
{"X":416.2895, "Y":316.31375},
{"X":416.7374, "Y":316.13815},
{"X":417.17435, "Y":315.96176},
{"X":417.58987, "Y":315.78387},
{"X":417.91846, "Y":315.5999},
{"X":418.2024, "Y":315.4346},
{"X":418.44223, "Y":315.27713},
{"X":418.68182, "Y":315.11963},
{"X":418.88904, "Y":314.95984},
{"X":419.09625, "Y":314.80008},
{"X":419.2935, "Y":314.62872},
{"X":419.4334, "Y":314.4969},
{"X":419.57407, "Y":314.35425},
{"X":419.70377, "Y":314.21085},
{"X":419.81204, "Y":314.06592},
{"X":419.93103, "Y":313.92178},
{"X":420.0383, "Y":313.7877},
{"X":420.1481, "Y":313.6211},
{"X":420.24692, "Y":313.45374},
{"X":420.33478, "Y":313.28564},
{"X":420.4122, "Y":313.11676},
{"X":420.48935, "Y":312.9479},
{"X":420.55478, "Y":312.78912},
{"X":420.6118, "Y":312.59705},
{"X":420.64404, "Y":312.44684},
{"X":420.67633, "Y":312.29663},
{"X":420.6979, "Y":312.14563},
{"X":420.70776, "Y":312.00473},
{"X":420.69595, "Y":311.86234},
{"X":420.667, "Y":311.65335},
{"X":420.59546, "Y":311.43054},
{"X":420.503, "Y":311.1953},
{"X":420.3988, "Y":310.9702},
{"X":420.2732, "Y":310.74362},
{"X":420.13638, "Y":310.5162},
{"X":419.9891, "Y":310.2881},
{"X":419.8263, "Y":310.1242},
{"X":419.67194, "Y":309.99362},
{"X":419.50613, "Y":309.8731},
{"X":419.31863, "Y":309.7511},
{"X":419.10867, "Y":309.63837},
{"X":418.88803, "Y":309.52493},
{"X":418.65466, "Y":309.43237},
{"X":418.42178, "Y":309.33984},
{"X":418.1869, "Y":309.26898},
{"X":417.9515, "Y":309.20895},
{"X":417.71533, "Y":309.15976},
{"X":417.48938, "Y":309.1222},
{"X":417.2517, "Y":309.09467},
{"X":417.00308, "Y":309.0664},
{"X":416.75317, "Y":309.0598},
{"X":416.44745, "Y":309.0711},
{"X":416.12997, "Y":309.09247},
{"X":415.80106, "Y":309.12393},
{"X":415.45966, "Y":309.17627},
{"X":415.12848, "Y":309.24023},
{"X":414.79575, "Y":309.3259},
{"X":414.41742, "Y":309.44104},
{"X":414.0939, "Y":309.5491},
{"X":413.77985, "Y":309.67963},
{"X":413.4867, "Y":309.8225},
{"X":413.2045, "Y":309.96616},
{"X":412.93225, "Y":310.12137},
{"X":412.67075, "Y":310.27734},
{"X":412.38223, "Y":310.50766},
{"X":412.07925, "Y":310.79144},
{"X":411.7872, "Y":311.076},
{"X":411.49414, "Y":311.37134},
{"X":411.20978, "Y":311.7},
{"X":410.90073, "Y":312.0705},
{"X":410.61182, "Y":312.46414},
{"X":410.41492, "Y":312.78802},
{"X":410.2412, "Y":313.09174},
{"X":410.0777, "Y":313.407},
{"X":409.92468, "Y":313.72308},
{"X":409.7943, "Y":314.02982},
{"X":409.69812, "Y":314.31714},
{"X":409.6126, "Y":314.60526},
{"X":409.5386, "Y":314.88327},
{"X":409.4865, "Y":315.16278},
{"X":409.44513, "Y":315.44308},
{"X":409.4137, "Y":315.73492},
{"X":409.38327, "Y":316.016},
{"X":409.36282, "Y":316.30862},
{"X":409.35306, "Y":316.60202},
{"X":409.3505, "Y":316.95038},
{"X":409.3589, "Y":317.29947},
{"X":409.3887, "Y":317.6501},
{"X":409.4287, "Y":318.0123},
{"X":409.4789, "Y":318.38614},
{"X":409.56998, "Y":318.7955},
{"X":409.67297, "Y":319.19476},
{"X":409.7895, "Y":319.55145},
{"X":409.91772, "Y":319.89807},
{"X":410.0475, "Y":320.22296},
{"X":410.18973, "Y":320.52698},
{"X":410.34418, "Y":320.81006},
{"X":410.51163, "Y":321.0614},
{"X":410.752, "Y":321.3614},
{"X":411.05743, "Y":321.66592},
{"X":411.3853, "Y":321.96115},
{"X":411.756, "Y":322.27023},
{"X":412.18204, "Y":322.56143},
{"X":412.64148, "Y":322.84406},
{"X":413.09323, "Y":323.08258},
{"X":413.4952, "Y":323.2523},
{"X":413.86707, "Y":323.38718},
{"X":414.2402, "Y":323.5004},
{"X":414.59418, "Y":323.57965},
{"X":414.927, "Y":323.64648},
{"X":415.24936, "Y":323.7126},
{"X":415.62704, "Y":323.76077},
{"X":416.0274, "Y":323.79965},
{"X":416.42905, "Y":323.81686},
{"X":416.85333, "Y":323.82474},
{"X":417.2899, "Y":323.8117},
{"X":417.8047, "Y":323.77145},
{"X":418.33173, "Y":323.71027},
{"X":418.82687, "Y":323.636},
{"X":419.3136, "Y":323.52844},
{"X":419.86862, "Y":323.38208},
{"X":420.41394, "Y":323.2133},
{"X":421.01587, "Y":323.01575},
{"X":421.5413, "Y":322.8238},
{"X":422.05725, "Y":322.60934},
{"X":422.56326, "Y":322.38336},
{"X":423.1046, "Y":322.14893},
{"X":423.5555, "Y":321.95172},
{"X":423.92554, "Y":321.74887},
{"X":424.6789, "Y":310.97543},
{"X":425.01297, "Y":310.92258},
{"X":425.3266, "Y":310.86826},
{"X":426.3273, "Y":310.76398},
{"X":427.21588, "Y":310.6736},
{"X":428.08206, "Y":310.5926},
{"X":428.92554, "Y":310.5209},
{"X":429.7685, "Y":310.46005},
{"X":430.58978, "Y":310.39764},
{"X":431.28946, "Y":310.35944},
{"X":431.51846, "Y":310.35367},
{"X":431.73596, "Y":310.358},
{"X":431.96445, "Y":310.36307},
{"X":432.1927, "Y":310.36816},
{"X":432.4219, "Y":310.3624},
{"X":432.63943, "Y":310.36673},
{"X":432.85693, "Y":310.37103},
{"X":433.06372, "Y":310.3746},
{"X":433.2703, "Y":310.37814},
{"X":433.46613, "Y":310.38095},
{"X":433.66196, "Y":310.38376},
{"X":433.84634, "Y":310.39667},
{"X":434.02994, "Y":310.42038},
{"X":434.20258, "Y":310.44336},
{"X":434.37524, "Y":310.4663},
{"X":434.53693, "Y":310.48853},
{"X":434.69885, "Y":310.5107},
{"X":434.83887, "Y":310.5314},
{"X":434.97836, "Y":310.56296},
{"X":435.10767, "Y":310.5829},
{"X":435.22598, "Y":310.60205},
{"X":435.33362, "Y":310.62045},
{"X":435.44046, "Y":310.64972},
{"X":435.53662, "Y":310.67822},
{"X":435.64273, "Y":310.7183},
{"X":435.74884, "Y":310.7584},
{"X":435.8542, "Y":310.80933},
{"X":435.94803, "Y":310.8704},
{"X":436.0302, "Y":310.94147},
{"X":436.0897, "Y":311.02185},
{"X":436.1379, "Y":311.11237},
{"X":436.16425, "Y":311.20132},
{"X":436.15744, "Y":311.29886},
{"X":436.1399, "Y":311.3957},
{"X":436.11063, "Y":311.50256},
{"X":436.06992, "Y":311.6195},
{"X":436.01822, "Y":311.7357},
{"X":435.9548, "Y":311.86197},
{"X":435.87994, "Y":311.99832},
{"X":435.8043, "Y":312.1455},
{"X":435.70624, "Y":312.30203},
{"X":435.6074, "Y":312.4694},
{"X":435.47366, "Y":312.66696},
{"X":435.33942, "Y":312.8754},
{"X":435.19345, "Y":313.0939},
{"X":435.0258, "Y":313.3109},
{"X":434.8472, "Y":313.52713},
{"X":434.66806, "Y":313.75424},
{"X":434.46628, "Y":313.99063},
{"X":434.2879, "Y":314.20688},
{"X":434.05298, "Y":314.45184},
{"X":433.80707, "Y":314.69604},
{"X":433.57135, "Y":314.95184},
{"X":433.32394, "Y":315.2177},
{"X":433.07675, "Y":315.4836},
{"X":432.81863, "Y":315.74875},
{"X":432.3989, "Y":316.14417},
{"X":431.98914, "Y":316.55118},
{"X":431.534, "Y":316.98767},
{"X":431.06766, "Y":317.4234},
{"X":430.60156, "Y":317.85916},
{"X":430.12476, "Y":318.29413},
{"X":429.6584, "Y":318.72986},
{"X":429.34317, "Y":319.03455},
{"X":429.0524, "Y":319.2974},
{"X":428.8182, "Y":319.53152},
{"X":428.59497, "Y":319.76642},
{"X":428.34906, "Y":320.01062},
{"X":428.11487, "Y":320.24475},
{"X":427.89243, "Y":320.46878},
{"X":427.69214, "Y":320.68353},
{"X":427.5028, "Y":320.899},
{"X":427.302, "Y":321.12457},
{"X":427.11246, "Y":321.34003},
{"X":426.95804, "Y":321.5253},
{"X":426.81433, "Y":321.71127},
{"X":426.68213, "Y":321.88718},
{"X":426.5616, "Y":322.05304},
{"X":426.45282, "Y":322.2088},
{"X":426.37796, "Y":322.34512},
{"X":426.2921, "Y":322.48074},
{"X":426.22894, "Y":322.60703},
{"X":426.17728, "Y":322.7232},
{"X":426.13705, "Y":322.82928},
{"X":426.09708, "Y":322.93542},
{"X":426.06857, "Y":323.03146},
{"X":426.04083, "Y":323.11664},
{"X":426.03403, "Y":323.2142},
{"X":426.066, "Y":323.3798},
{"X":426.11966, "Y":323.54694},
{"X":426.18405, "Y":323.71478},
{"X":426.2586, "Y":323.8943},
{"X":426.35486, "Y":324.0753},
{"X":426.4728, "Y":324.25778},
{"X":426.61316, "Y":324.43097},
{"X":426.7364, "Y":324.53763},
{"X":426.87057, "Y":324.64502},
{"X":427.02545, "Y":324.76477},
{"X":427.203, "Y":324.87518},
{"X":427.39124, "Y":324.9864},
{"X":427.6012, "Y":325.0991},
{"X":427.82285, "Y":325.20172},
{"X":428.0552, "Y":325.30508},
{"X":428.29904, "Y":325.39838},
{"X":428.54388, "Y":325.48087},
{"X":428.8002, "Y":325.55325},
{"X":429.05728, "Y":325.6148},
{"X":429.31436, "Y":325.67633},
{"X":429.58316, "Y":325.7278},
{"X":429.85245, "Y":325.76843},
{"X":430.12277, "Y":325.79822},
{"X":430.40454, "Y":325.8179},
{"X":430.708, "Y":325.83914},
{"X":431.0122, "Y":325.84952},
{"X":431.32816, "Y":325.84982},
{"X":431.6446, "Y":325.8393},
{"X":431.98373, "Y":325.81943},
{"X":432.43326, "Y":325.7746},
{"X":432.89526, "Y":325.7089},
{"X":433.34885, "Y":325.60992},
{"X":433.9253, "Y":325.4651},
{"X":434.6192, "Y":325.19775},
{"X":435.3256, "Y":324.9095},
{"X":436.0465, "Y":324.5678},
{"X":436.74414, "Y":324.21582},
{"X":437.61398, "Y":323.69717},
{"X":438.07062, "Y":323.34793},
{"X":489.0316, "Y":318.17966},
{"X":489.9158, "Y":319.25113},
{"X":491.5397, "Y":319.7786},
{"X":493.801, "Y":320.04922},
{"X":495.84988, "Y":320.45212},
{"X":498.2066, "Y":320.77917},
{"X":500.4821, "Y":321.0356},
{"X":502.53433, "Y":321.23322},
{"X":503.91266, "Y":321.16733},
{"X":504.53333, "Y":320.7997},
{"X":504.2094, "Y":320.17126},
{"X":503.36426, "Y":319.4199},
{"X":501.7964, "Y":318.32587},
{"X":499.95023, "Y":317.03937},
{"X":497.9945, "Y":315.61536},
{"X":496.20685, "Y":313.95428},
{"X":494.7574, "Y":312.25198},
{"X":493.81598, "Y":310.55276},
{"X":493.35492, "Y":308.63834},
{"X":493.41516, "Y":306.69543},
{"X":493.92044, "Y":304.72958},
{"X":495.08084, "Y":302.83118},
{"X":496.72995, "Y":301.3672},
{"X":498.8317, "Y":300.23773},
{"X":501.23853, "Y":299.38922},
{"X":503.64743, "Y":298.97354},
{"X":505.97742, "Y":298.9093},
{"X":508.04153, "Y":299.24835},
{"X":510.1721, "Y":299.56177},
{"X":511.68356, "Y":300.32874},
{"X":512.2236, "Y":301.6285}
    ],
    myCoordinatesZBeforeAndAfter: [
        {"X":1,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":1},
        {"X":1,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":1},
        {"X":1,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":1},
        {"X":1,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":1},
        {"X":1,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":1},
        {"X":1,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":0},
        {"X":0,"Y":1},
    ]
  };
  
  let mySettings = {
    servoAngleUp: 90,
    servoAngleDown: 0,
    servoWaitTime: 500,
    printerSpeed: 1500,
    segmentLength: 10,
    angleThreshold: 0.4,
    heightLeftStripe: 0,
    heightRightStripe: 0,
    heightTopStripe: 0,
    paperSize: { X: 200, Y: 200 }
  };
  
  let scale = 1.0;
  let giveWarning = false;
  
  let { resGCode, totalTimeInt, actualPenPath } = createGCode(
    myToolPath,
    scale,
    mySettings,
    giveWarning
  );
  
  console.log("G-Code:", resGCode);
  console.log("Total Time (int):", totalTimeInt);
  console.log("Actual Pen Path:", actualPenPath);
  
  /**
 * Clamps a value between [minVal, maxVal].
 */
function clamp(value, minVal, maxVal) {
  return Math.max(minVal, Math.min(maxVal, value));
}

/**
 * Replicates the logic of your C++/CLI `drawGCodeSvg`.
 * 
 * @param {Object} toolPath            - The tool path object with .myCoordinatesXY and .myCoordinatesZBeforeAndAfter
 * @param {number} scale               - A scaling factor
 * @param {number} penWidth            - Base pen (stroke) width
 * @param {Object} myColor             - Base color as an RGBA object: {R, G, B, A}
 * @returns {string}                   - Concatenated <path> elements as a single string
 */
function drawGCodeSvg(toolPath, scale, penWidth, myColor) {
  // We'll store the finished <path> elements in an array.
  let svgElements = [];

  // This array will store consecutive points while the pen is "down."
  let tempList = [];

  // Helper function for random between -10 and +10 (for color offsets)
  // and [0..1) for multipliers, same as C++ code's nextDouble().
  function rand(min, max) {
    return Math.random() * (max - min) + min;
  }

  // Iterate through each coordinate
  for (let n = 0; n < toolPath.myCoordinatesXY.length; n++) {
    // Current pen state transitions
    let zBefore = toolPath.myCoordinatesZBeforeAndAfter[n].X;
    let zAfter  = toolPath.myCoordinatesZBeforeAndAfter[n].Y;

    // If the pen was 0 (down) and now is 1 (up), finalize the path
    if (zBefore === 0 && zAfter === 1) {
      if (tempList.length > 1) {
        // Randomize pen a bit (as your original code does)
        // random width
        let widthFactor = rand(0.0, 0.2) + 1.0; // from 1.0 to 1.2
        let finalWidth = penWidth * widthFactor;

        // random color offsets (±10 in alpha or B in your example)
        let addA = Math.floor(rand(-10, 10));
        let addB = Math.floor(rand(-10, 10));
        
        // clamp color channels
        let newA = clamp(myColor.A + addA, 0, 255);
        let newR = clamp(myColor.R,        0, 255);
        let newG = clamp(myColor.G,        0, 255);
        let newB = clamp(myColor.B + addB, 0, 255);

        // Build #RRGGBBAA
        // Note: toString(16) will produce hex, pad it to length 2
        let hexColor = "#" +
          newR.toString(16).padStart(2, "0") +
          newG.toString(16).padStart(2, "0") +
          newB.toString(16).padStart(2, "0") +
          newA.toString(16).padStart(2, "0");

        // Build the path "M x0 y0 L x1 y1 L x2 y2 ..."
        let pathData = `M ${tempList[0].x.toFixed(2)} ${tempList[0].y.toFixed(2)}`;
        for (let i = 1; i < tempList.length; i++) {
          let pt = tempList[i];
          pathData += ` L ${pt.x.toFixed(2)} ${pt.y.toFixed(2)}`;
        }

        // Append the path element
        svgElements.push(
          `<path d="${pathData}" stroke="${hexColor}" stroke-width="${finalWidth.toFixed(2)}" fill="none"/>`
        );
      }

      // Clear after finishing a stroke
      tempList = [];
    }
    // If pen is down -> down (0->0), just accumulate points
    else if (zBefore === 0 && zAfter === 0) {
      let x = toolPath.myCoordinatesXY[n].X * scale;
      let y = toolPath.myCoordinatesXY[n].Y * scale;

      // Round to 2 decimals
      x = Math.round(x * 100) / 100;
      y = Math.round(y * 100) / 100;

      tempList.push({ x, y });
    }
    // If pen goes from up -> down (1->0), also add the point
    else if (zBefore === 1 && zAfter === 0) {
      let x = toolPath.myCoordinatesXY[n].X * scale;
      let y = toolPath.myCoordinatesXY[n].Y * scale;

      x = Math.round(x * 100) / 100;
      y = Math.round(y * 100) / 100;

      tempList.push({ x, y });
    }
    // Otherwise, no action needed (e.g. pen up -> up or other states).
  }

  // If any leftover points remain in tempList, you can decide whether 
  // to finalize them as one last <path> or simply ignore. 
  // The original C++ code does not finalize them if there's no 0->1 transition at the end, 
  // so we’ll mirror that behavior.

  // Return all paths in one string
  return svgElements.join("");
}

// Example usage:



  // 2) Set up some parameters
  const penWidth = 2.0;
  const myColor = { R: 200, G: 50, B: 80, A: 255 }; // RGBA

  // 3) Get the <path> elements
  const pathsString = drawGCodeSvg(myToolPath, scale, penWidth, myColor);

  // 4) Wrap them in an <svg> to display, or attach them to DOM
  const svgWidth = 1635.0;
  const svgHeight = 1128.0;
  const svgFull = `
<svg xmlns="http://www.w3.org/2000/svg" width="${svgWidth}" height="${svgHeight}">
  ${pathsString}
</svg>
  `;

  // 5) For instance, if running in the browser, you could:
  // document.body.innerHTML = svgFull;
  console.log(svgFull);


// If running in a browser, call example():
// example();
